
<<<인터페이스(interface) ~사이 얼굴>>>
=> 사용측과 사용당하는측으로 구분이 가능 

1) class 대신에 interface를 사용한다는 것
2) interface에 변수에는 (public static final)생략 변수 선언시
3) interface에 메서드에는  (public abstract)생략 메서드 선언시
4) 클래스와 달리 다중상속을 허용한다.
5) 인터페이스는 Object클래스와 같은 최고 조상이 없다.
6) 생성자도 없다.

List lis = new List(){};  //List는 인터페이스이기에 생성자가 없다
			  //중괄호 안에 있는 부분이 익명구현 객체
			  //전부에 List부분에 자식클래스가 오면 익명자손구현 객체라 불리낟.

implements : 구현하다.

인터페이스도 일종의 조상이다.(다형성)

void attack(Fightable f){} //Fightable==인터페이스 즉, 인터페이스를 구현한 클래스만 들어올수 있다.



--------------------------------------------------------

