<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.layout.*?>
<?import javafx.scene.image.*?>
<?import javafx.scene.control.*?>
<?import javafx.geometry.*?>
<?import java.lang.*?>
<?import javafx.scene.image.Image?>

<VBox spacing="10" xmlns:fx="http://javafx.com/fxml/1">
	<children>
		<!-- 그림은 가로와 세로의 비율이 있다. 그림이 깨지지않도록 원본을 유지하기 위해서 preserveRatio를 true로 설정해주면 
			된다. false를 설정하면 그림의 비율리 깨진다. 고정된폭을 주니깐 preserveRatio를 false로 설정하면 원본 이미지가 
			깨지고 주어진 크기대로 맞추어진다. true로 바꿔서 실행해보자 -->
		<ImageView fitHeight="200.0" fitWidth="150.0" preserveRatio="false">
			<!-- 이미지의 경로(기준점이 자신의 파일이다. 즉, 상대경로이다. 
			@는 참조하겠다는 의미이다. -->
			<image>
			<Image url="@images/김연아.jpg"/>
			</image>
		</ImageView>
		
		<!-- VBox컨테이너안에 HBox컨테이너가 컨트롤처럼 배치되는 경우이다. -->
		<HBox alignment="TOP_CENTER" prefHeight="43.0" prefWidth="194.0"
			spacing="20.0">
			<children>
				<Button text="김연아>>>>>>" />
				<!--HBox의 언ㄼ이 만큼 해주기 위해 HBox.hgrow를 INHERIT로 하지말고 ALWAYS로 바꾼후 MaxWidth를 
					maxValue로 설정 해야한다. -->
				<Button text="다음">
				<!-- 폭을 확장해 본다./ -->
				<HBox.hgrow>
					<Priority fx:constant="ALWAYS" />
				</HBox.hgrow>
				<!-- 상수를 이용하여 폭을 넓게 잡아주고 있다. -->
				<maxWidth>
					<Double fx:constant="MAX_VALUE" />
				</maxWidth>
				</Button>
			</children>
			<padding>
				<Insets bottom="10.0" left="10.0" top="10.0" right="10.0"/>
			</padding>
		</HBox>
	</children>
</VBox>

