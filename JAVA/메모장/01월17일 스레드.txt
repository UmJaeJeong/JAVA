예) 카카오톡 프로세스를 실행하는것은 1개!!
		하지만!!!! 스레드는 그안에 몇개가 있는지 모른다.
			   여러개의 스레드가 포함되어 있다.

<<<프로세스>>>
=> 실행 중인 하나의 프로그램

<<<멀티 태스킹(multi tasking)>>>
=> 두 가지 이상의 작업을 동시에 처리하는것
1) 멀티프로세스 => 독립적인 프로그램을 여러번 실행하고 작업처리
2) 멀티 스레드 => 한 개의 프로그램을 실행하고 내부적으로 여러가지 작업처리
		  (메신저 -> 전송 스레드, 채팅스레드...)

<<<메인 스레드>>>
모든 자바 프로그램은 JVM에 메인스레드가 main() 메서드를 실행한다
#메인 스레드가 없으면 뻗어 나가지 못한다.



<<멀티스레드 어플리케이션과 같을 경우>>
Main 스레드와 다른 작업스레드가 동시에 실행된다고 해서 동시성!이라 말한다.
즉) 메인스레드가 종료되었다고 한들, 다른 작업스레드와 같은경우는 끝까지 실행한다.
    모든 스레드가 종료될떄까지 프로세스는 종료되지 않는다.   
ex) P2P사이트 동영상파일 다운로드해도 익스플로러를 닫아도 이행된다.


<<작업 스레드 생성 방법>>
1) Thread 클래스로부터 직접 생성
2) Thread 하위 클래스로부터 생성 (이방법이 관리가 편하다)
3) 람다식으로 만드는 것

병렬성 -> Parallesm

--------------------------------------------------------------------
동시성(Comcurrency) : 멀티작업을 위해 하나의 코어에서 멀티 스레드가 번갈아 가며 실행

병렬성(Paralleism) : 멀티작업을 위해 멀티코어에서 개별 스레드를 동시에 실행하는 성질
=> 실행되는 스레드가 2개만 있다면 서로 나눠가지면서
   엄청나게 많은 스레드가 존재한다.
--------------------------------------------------------------------------
<요즘>
요즘 멀티코어같은 경우는 병렬성의 성질과 동시성의 성질을 모두 가진다.
--------------------------------------------------------------------------

<<<스레드 스케쥴링>>>
스레드의 개수가 코어의 수보다 많은 경우
-> 스레드를 어떤 순서로 동시성으로 실행할 것인가? 결정 
-->스레드 스케쥴링(CPU가 결정함)

<우선순위 스케쥴링>

※순환 할당 방식(코드로 제어할 수 없음) - > 자바에서는 기본적으로 이 방식을 사용됨
=> 시간할당량을 정해서 하나의 스레드를 정해진 시간 만큼 CPU가 실행하는 방식
1) 1~10까지 우선순위가 있음(사용자 설정)
2)우선순위가 높을수록 실행기회가 높아 빨리 종료되는 현상이 나옴
(우선수위가10인 스레드가 먼저 끝날 경향이 높다라는 의미임 무조건은 아니다.)

-----------------------
스레드 우선순위

1)모든 스레드의 우선순의 5의 우선 순위(Normal Priorty)









